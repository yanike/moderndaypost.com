;jQuery(document).ready(function(){var e=jQuery("div.form-actions button.bf-submit[type=submit], div.form-actions button.bf-draft[type=button]"),o;if(e.length>0){o=jQuery.map(e,function(e){return(jQuery(e).attr("type")==="submit"&&jQuery(e).hasClass("bf-submit"))?jQuery(e):null})[0];var i=o.html()};jQuery(".featured-image-uploader").each(function(l,r){var a=jQuery(this),s=a.attr("id"),u=a.attr("max_file_size"),c=a.attr("page"),t=a.data("entry"),n=c!=="buddyforms_submissions",d=jQuery("#field_"+s);if(buddyformsGlobal){const dropzoneControl=a[0].dropzone;if(dropzoneControl){dropzoneControl.destroy()};var f=new Dropzone("div#"+s,{url:buddyformsGlobal.admin_url,maxFilesize:u,acceptedFiles:"image/*",maxFiles:1,clickable:n,addRemoveLinks:n,init:function(){this.on("complete",function(){if(e.length>0){e.removeAttr("disabled");o.html(i)}});this.on("addedfile",function(){jQuery("#field_"+s+"-error").text("");if(this.files.length>1){this.removeFile(this.files[0])};if(e.length>0){e.attr("disabled","disabled");o.html(buddyformsGlobal.localize.upload.submitButton||"Upload in progress")}});this.on("sending",function(e,o,i){i.append("action","handle_dropped_media");i.append("nonce",buddyformsGlobal.ajaxnonce)});this.on("success",function(e,o){a.removeClass("error");e.previewElement.classList.add("dz-success");e["attachment_id"]=o;var i=d.val()+","+o,l="";if(i[0]===","){l=i.substring(1,i.length)}
else{l=i};d.val(l)});this.on("error",function(l,a){l.previewElement.classList.add("dz-error");jQuery(l.previewElement).find("div.dz-error-message>span").text(a);if(e.length>0){e.removeAttr("disabled");o.html(i)}});this.on("removedfile",function(a){var t=a.attachment_id,r=d.val(),l=r.replace(t,"");if(l[0]===","){l=l.substring(1,r.length)};var s=l[l.length-1];if(s===","){l=l.slice(0,-1)};d.val(l);e.attr("disabled","disabled");jQuery.post(buddyformsGlobal.admin_url,{action:"handle_deleted_media",media_id:t,nonce:buddyformsGlobal.ajaxnonce},function(e){console.log(e)}).always(function(){if(e.length>0){e.removeAttr("disabled");o.html(i)}})});if(t){for(var r in t){if(r){var l={name:t[r]["name"],size:t[r]["size"],url:t[r]["url"],attachment_id:t[r]["attachment_id"]};this.emit("addedfile",l);this.emit("thumbnail",l,l.url);this.emit("complete",l);this.files.push(l)}}}},dictMaxFilesExceeded:buddyformsGlobal.localize.upload.dictMaxFilesExceeded||"You can not upload any more files.",dictRemoveFile:buddyformsGlobal.localize.upload.dictRemoveFile||"Remove file",dictCancelUploadConfirmation:buddyformsGlobal.localize.upload.dictCancelUploadConfirmation||"Are you sure you want to cancel this upload?",dictCancelUpload:buddyformsGlobal.localize.upload.dictCancelUpload||"Cancel upload",dictResponseError:buddyformsGlobal.localize.upload.dictResponseError||"Server responded with {{statusCode}} code.",dictInvalidFileType:buddyformsGlobal.localize.upload.dictInvalidFileType||"You can't upload files of this type.",dictFileTooBig:buddyformsGlobal.localize.upload.dictFileTooBig||"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.",dictFallbackMessage:buddyformsGlobal.localize.upload.dictFallbackMessage||"Your browser does not support drag'n'drop file uploads.",dictDefaultMessage:buddyformsGlobal.localize.upload.dictDefaultMessage||"Drop files here to upload",})}})});if(Dropzone){Dropzone.autoDiscover=!1};