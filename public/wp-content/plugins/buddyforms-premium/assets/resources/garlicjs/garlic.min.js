!function(t){'use strict';var i=function(t){this.defined='undefined'!==typeof localStorage};i.prototype={constructor:i,get:function(t,e){return localStorage.getItem(t)?localStorage.getItem(t):'undefined'!==typeof e?e:null},has:function(t){return localStorage.getItem(t)?!0:!1},set:function(t,e,i){if('string'===typeof e){if(''===e){this.destroy(t)}
else{localStorage.setItem(t,e)}};return'function'===typeof i?i():!0},destroy:function(t,e){localStorage.removeItem(t);return'function'===typeof e?e():!0},clean:function(t){for(var e=localStorage.length-1;e>=0;e--){if('undefined'===typeof Array.indexOf&&-1!==localStorage.key(e).indexOf('garlic:')){localStorage.removeItem(localStorage.key(e))}};return'function'===typeof t?t():!0},clear:function(t){localStorage.clear();return'function'===typeof t?t():!0}};var e=function(t,e,i){this.init('garlic',t,e,i)};e.prototype={constructor:e,init:function(e,i,n,s){this.type=e;this.$element=t(i);this.options=this.getOptions(s);this.storage=n;this.path=this.options.getPath(this.$element)||this.getPath();this.parentForm=this.$element.closest('form');this.$element.addClass('garlic-auto-save');this.expiresFlag=!this.options.expires?!1:(this.$element.data('expires')?this.path:this.getPath(this.parentForm))+'_flag';this.$element.on(this.options.events.join('.'+this.type+' '),!1,t.proxy(this.persist,this));if(this.options.destroy){t(this.parentForm).on('submit reset',!1,t.proxy(this.destroy,this))};this.retrieve()},getOptions:function(e){return t.extend({},t.fn[this.type].defaults,e,this.$element.data())},persist:function(){if(this.val===this.getVal()){return};this.val=this.getVal();if(this.options.expires){this.storage.set(this.expiresFlag,(new Date().getTime()+this.options.expires*1000).toString())};this.storage.set(this.path,this.getVal());this.options.onPersist(this.$element,this.getVal())},getVal:function(){return!this.$element.is('input[type=checkbox]')?this.$element.val():(this.$element.prop('checked')?'checked':'unchecked')},retrieve:function(){if(this.storage.has(this.path)){if(this.options.expires){var e=new Date().getTime();if(this.storage.get(this.expiresFlag)<e.toString()){this.storage.destroy(this.path);return}
else{this.$element.attr('expires-in',Math.floor((parseInt(this.storage.get(this.expiresFlag))-e)/1000))}};var t=this.storage.get(this.path);if(this.options.conflictManager.enabled&&this.detectConflict()){return this.conflictManager()};if(this.$element.is('input[type=radio], input[type=checkbox]')){if('checked'===t||this.$element.val()===t){return this.$element.attr('checked',!0)}
else if('unchecked'===t){this.$element.attr('checked',!1)};return};this.$element.val(t);this.$element.trigger('input');this.options.onRetrieve(this.$element,t);return}},detectConflict:function(){var i=this;if(this.$element.is('input[type=checkbox], input[type=radio]')){return!1};if(this.$element.val()&&this.storage.get(this.path)!==this.$element.val()){if(this.$element.is('select')){var e=!1;this.$element.find('option').each(function(){if(t(this).index()!==0&&t(this).attr('selected')&&t(this).val()!==i.storage.get(this.path)){e=!0;return}});return e};return!0};return!1},conflictManager:function(){if('function'===typeof this.options.conflictManager.onConflictDetected&&!this.options.conflictManager.onConflictDetected(this.$element,this.storage.get(this.path))){return!1};if(this.options.conflictManager.garlicPriority){this.$element.data('swap-data',this.$element.val());this.$element.data('swap-state','garlic');this.$element.val(this.storage.get(this.path))}
else{this.$element.data('swap-data',this.storage.get(this.path));this.$element.data('swap-state','default')};this.swapHandler();this.$element.addClass('garlic-conflict-detected');this.$element.closest('input[type=submit]').attr('disabled',!0)},swapHandler:function(){var e=t(this.options.conflictManager.template);this.$element.after(e.text(this.options.conflictManager.message));e.on('click',!1,t.proxy(this.swap,this))},swap:function(){var e=this.$element.data('swap-data');this.$element.data('swap-state','garlic'===this.$element.data('swap-state')?'default':'garlic');this.$element.data('swap-data',this.$element.val());t(this.$element).val(e)},destroy:function(){this.storage.destroy(this.path)},remove:function(){this.remove();if(this.$element.is('input[type=radio], input[type=checkbox]')){t(this.$element).prop('checked',!1);return};this.$element.val('')},getPath:function(e){if('undefined'===typeof e){e=this.$element};if(this.options.getPath(e)){return this.options.getPath(e)};if(e.length!=1){return!1};var a='',h=e.is('input[type=checkbox]'),s=e;while(s.length){var i=s[0],n=i.nodeName;if(!n){break};n=n.toLowerCase();var r=s.parent(),o=r.children(n);if(!t(i).is('form, input, select, textarea')&&!h){s=r;continue};n+=t(i).attr('name')?'.'+t(i).attr('name'):'';if(o.length>1&&!t(i).is('input[type=radio]')){n+=':eq('+o.index(i)+')'};a=n+(a?'>'+a:'');if('form'==i.nodeName.toLowerCase()){break};s=r};return'garlic:'+document.domain+(this.options.domain?'*':window.location.pathname)+'>'+a},getStorage:function(){return this.storage}};t.fn.garlic=function(n,s){var a=t.extend(!0,{},t.fn.garlic.defaults,n,this.data()),o=new i(),r=!1;if(!o.defined){return!1};function h(i){var r=t(i),s=r.data('garlic'),h=t.extend({},a,r.data());if('undefined'!==typeof h.storage&&!h.storage){return};if('password'===t(i).attr('type')){return};if(!s){r.data('garlic',(s=new e(i,o,h)))};if('string'===typeof n&&'function'===typeof s[n]){return s[n]()}};this.each(function(){if(t(this).is('form')){t(this).find(a.inputs).each(function(){if(t(this).is(a.excluded)){return};r=h(t(this))})}
else if(t(this).is(a.inputs)){if(t(this).is(a.excluded)){return};r=h(t(this))}});return'function'===typeof s?s():r};t.fn.garlic.Constructor=e;t.fn.garlic.defaults={destroy:!0,inputs:'input, textarea, select',excluded:'input[type="file"], input[type="hidden"]',events:['DOMAttrModified','textInput','input','change','click','keypress','paste','focus'],domain:!1,expires:!1,conflictManager:{enabled:!1,garlicPriority:!0,template:'<span class="garlic-swap"></span>',message:'This is your saved data. Click here to see default one',onConflictDetected:function(t,e){return!0}},getPath:function(t){},onRetrieve:function(t,e){},onPersist:function(t,e){}};t(window).on('load',function(){t('[data-persist="garlic"]').each(function(){t(this).garlic()})})}(window.jQuery||window.Zepto);