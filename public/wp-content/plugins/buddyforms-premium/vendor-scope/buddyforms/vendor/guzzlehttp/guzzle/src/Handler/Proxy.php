<?php
 namespace tk\GuzzleHttp\Handler; use tk\GuzzleHttp\Promise\PromiseInterface; use tk\GuzzleHttp\RequestOptions; use tk\Psr\Http\Message\RequestInterface; class Proxy { public static function wrapSync(callable $default, callable $sync) : callable { return static function (\tk\Psr\Http\Message\RequestInterface $request, array $options) use($default, $sync) : PromiseInterface { return empty($options[\tk\GuzzleHttp\RequestOptions::SYNCHRONOUS]) ? $default($request, $options) : $sync($request, $options); }; } public static function wrapStreaming(callable $default, callable $streaming) : callable { return static function (\tk\Psr\Http\Message\RequestInterface $request, array $options) use($default, $streaming) : PromiseInterface { return empty($options['stream']) ? $default($request, $options) : $streaming($request, $options); }; } } 