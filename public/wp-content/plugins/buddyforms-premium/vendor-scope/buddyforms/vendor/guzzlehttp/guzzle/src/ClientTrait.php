<?php
 namespace tk\GuzzleHttp; use tk\GuzzleHttp\Exception\GuzzleException; use tk\GuzzleHttp\Promise\PromiseInterface; use tk\Psr\Http\Message\ResponseInterface; use tk\Psr\Http\Message\UriInterface; trait ClientTrait { public abstract function request(string $method, $uri, array $options = []) : \tk\Psr\Http\Message\ResponseInterface; public function get($uri, array $options = []) : \tk\Psr\Http\Message\ResponseInterface { return $this->request('GET', $uri, $options); } public function head($uri, array $options = []) : \tk\Psr\Http\Message\ResponseInterface { return $this->request('HEAD', $uri, $options); } public function put($uri, array $options = []) : \tk\Psr\Http\Message\ResponseInterface { return $this->request('PUT', $uri, $options); } public function post($uri, array $options = []) : \tk\Psr\Http\Message\ResponseInterface { return $this->request('POST', $uri, $options); } public function patch($uri, array $options = []) : \tk\Psr\Http\Message\ResponseInterface { return $this->request('PATCH', $uri, $options); } public function delete($uri, array $options = []) : \tk\Psr\Http\Message\ResponseInterface { return $this->request('DELETE', $uri, $options); } public abstract function requestAsync(string $method, $uri, array $options = []) : \tk\GuzzleHttp\Promise\PromiseInterface; public function getAsync($uri, array $options = []) : \tk\GuzzleHttp\Promise\PromiseInterface { return $this->requestAsync('GET', $uri, $options); } public function headAsync($uri, array $options = []) : \tk\GuzzleHttp\Promise\PromiseInterface { return $this->requestAsync('HEAD', $uri, $options); } public function putAsync($uri, array $options = []) : \tk\GuzzleHttp\Promise\PromiseInterface { return $this->requestAsync('PUT', $uri, $options); } public function postAsync($uri, array $options = []) : \tk\GuzzleHttp\Promise\PromiseInterface { return $this->requestAsync('POST', $uri, $options); } public function patchAsync($uri, array $options = []) : \tk\GuzzleHttp\Promise\PromiseInterface { return $this->requestAsync('PATCH', $uri, $options); } public function deleteAsync($uri, array $options = []) : \tk\GuzzleHttp\Promise\PromiseInterface { return $this->requestAsync('DELETE', $uri, $options); } } 