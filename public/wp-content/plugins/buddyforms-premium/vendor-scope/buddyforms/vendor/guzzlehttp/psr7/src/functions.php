<?php
 namespace tk\GuzzleHttp\Psr7; use tk\Psr\Http\Message\MessageInterface; use tk\Psr\Http\Message\RequestInterface; use tk\Psr\Http\Message\StreamInterface; use tk\Psr\Http\Message\UriInterface; function str(\tk\Psr\Http\Message\MessageInterface $message) { return \tk\GuzzleHttp\Psr7\Message::toString($message); } function uri_for($uri) { return \tk\GuzzleHttp\Psr7\Utils::uriFor($uri); } function stream_for($resource = '', array $options = []) { return \tk\GuzzleHttp\Psr7\Utils::streamFor($resource, $options); } function parse_header($header) { return \tk\GuzzleHttp\Psr7\Header::parse($header); } function normalize_header($header) { return \tk\GuzzleHttp\Psr7\Header::normalize($header); } function modify_request(\tk\Psr\Http\Message\RequestInterface $request, array $changes) { return \tk\GuzzleHttp\Psr7\Utils::modifyRequest($request, $changes); } function rewind_body(\tk\Psr\Http\Message\MessageInterface $message) { \tk\GuzzleHttp\Psr7\Message::rewindBody($message); } function try_fopen($filename, $mode) { return \tk\GuzzleHttp\Psr7\Utils::tryFopen($filename, $mode); } function copy_to_string(\tk\Psr\Http\Message\StreamInterface $stream, $maxLen = -1) { return \tk\GuzzleHttp\Psr7\Utils::copyToString($stream, $maxLen); } function copy_to_stream(\tk\Psr\Http\Message\StreamInterface $source, \tk\Psr\Http\Message\StreamInterface $dest, $maxLen = -1) { return \tk\GuzzleHttp\Psr7\Utils::copyToStream($source, $dest, $maxLen); } function hash(\tk\Psr\Http\Message\StreamInterface $stream, $algo, $rawOutput = \false) { return \tk\GuzzleHttp\Psr7\Utils::hash($stream, $algo, $rawOutput); } function readline(\tk\Psr\Http\Message\StreamInterface $stream, $maxLength = null) { return \tk\GuzzleHttp\Psr7\Utils::readLine($stream, $maxLength); } function parse_request($message) { return \tk\GuzzleHttp\Psr7\Message::parseRequest($message); } function parse_response($message) { return \tk\GuzzleHttp\Psr7\Message::parseResponse($message); } function parse_query($str, $urlEncoding = \true) { return \tk\GuzzleHttp\Psr7\Query::parse($str, $urlEncoding); } function build_query(array $params, $encoding = \PHP_QUERY_RFC3986) { return \tk\GuzzleHttp\Psr7\Query::build($params, $encoding); } function mimetype_from_filename($filename) { return \tk\GuzzleHttp\Psr7\MimeType::fromFilename($filename); } function mimetype_from_extension($extension) { return \tk\GuzzleHttp\Psr7\MimeType::fromExtension($extension); } function _parse_message($message) { return \tk\GuzzleHttp\Psr7\Message::parseMessage($message); } function _parse_request_uri($path, array $headers) { return \tk\GuzzleHttp\Psr7\Message::parseRequestUri($path, $headers); } function get_message_body_summary(\tk\Psr\Http\Message\MessageInterface $message, $truncateAt = 120) { return \tk\GuzzleHttp\Psr7\Message::bodySummary($message, $truncateAt); } function _caseless_remove($keys, array $data) { return \tk\GuzzleHttp\Psr7\Utils::caselessRemove($keys, $data); } 